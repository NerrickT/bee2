---

- name: Check if password has been generated
  local_action: stat path={{ pgp_password_file }}
  register: local_pgp_password_file
  become: False

- name : Generate password
  local_action: command pwgen -s 25 1 #TODO: settings for length
  register: password
  when: local_pgp_password_file.stat.exists == False
  become: False

- name: Ensure password directory exists
  local_action: file path={{ pgp_password_path }} state=directory
  when: local_pgp_password_file.stat.exists == False
  become: False

- name: Encrypt and save password
  local_action: shell echo {{ password.stdout }} | gpg --encrypt --armor -r {{ security.pgp_id }} > {{ pgp_password_file }} creates={{ pgp_password_file }}
  when: local_pgp_password_file.stat.exists == False
  become: False

- name: Decrypt password
  local_action: command gpg --decrypt {{ pgp_password_file }}
  register: password
  become: False

# Set it in the VM

- local_action: shell echo {{ password.stdout }} | mkpasswd --method=SHA-512 --stdin
  register: crypt_password
  become: False

- user: name=root password={{ crypt_password.stdout }}
